" Use deoplete.
let g:deoplete#enable_at_startup=1

" Use space instead of tab
set expandtab
" Size of tab
set tabstop=2
set shiftwidth=2
set autoindent
" Shows line number
set number nu
" Shows syntax highlight
syntax on
" Show last entered command on the screen
set showcmd
" Search as characters are entered
set incsearch
" Highlight matched
set hlsearch
" Hide current mode (replaced by lightline)
set noshowmode
set laststatus=2

" File grep settings
if executable('rg')
	let &grepprg = 'rg --vimgrep --hidden'
	set grepformat=%f:%l:%c:%m
endif

" PHP settings
augroup PHP
	autocmd!
	" Check for PHP syntax errors after saving a file
	autocmd BufWritePost {*.php} echom system("php -l ".expand('%'))
augroup END

call plug#begin('~/.vim/plugged')
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
Plug 'dense-analysis/ale'
Plug 'prabirshrestha/vim-lsp'
Plug 'elixir-editors/vim-elixir'
Plug 'tpope/vim-fugitive'
Plug 'itchyny/lightline.vim'
Plug 'vim-vdebug/vdebug'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'prettier/vim-prettier', { 'do': 'yarn install' }
call plug#end()

" Set ale fixer
let b:ale_fixers = ['prettier', 'eslint']
" Set ale linter
let g:ale_linters = {
      \ 'rust': ['analyzer'],
      \}
let g:ale_fix_on_save = 1

" Set rust analyzer
if executable('rust-analyzer')
	au User lsp_setup call lsp#register_server({
		\ 'name': 'Rust Language Server',
		\ 'cmd': {server_info->['rust-analyzer']},
		\ 'whitelist': ['rust'],
		\ })
endif

