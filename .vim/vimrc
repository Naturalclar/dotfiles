let g:loaded_python3_provider = 0
let g:loaded_python_provider = 0
" Use space instead of tab
set expandtab
" Size of tab
set tabstop=2
set shiftwidth=2
set autoindent
" Shows line number
set number nu
" Shows syntax highlight
syntax on
" Show last entered command on the screen
set showcmd
" Search as characters are entered
set incsearch
" Highlight matched
set hlsearch
" Hide current mode (replaced by lightline)
set noshowmode
set laststatus=2
" Set leader to space key
let mapleader = " "
" File grep settings
if executable('rg')
	let &grepprg = 'rg --vimgrep --hidden'
	set grepformat=%f:%l:%c:%m
endif
" Setup fonts
set guifont=Droid\ Sans\ Mono\ for\ Powerline\ Nerd\ Font\ Complete\ 12
set encoding=utf-8

let g:WebDevIconsNerdTreeBeforeGlyphPadding = ""
let g:WebDevIconsUnicodeDecorateFolderNodes = v:true
" after a re-source, fix syntax matching issues (concealing brackets):
if exists('g:loaded_webdevicons')
  call webdevicons#refresh()
endif
" PHP settings
augroup PHP
	autocmd!
	" Check for PHP syntax errors after saving a file
	autocmd BufWritePost {*.php} echom system("php -l ".expand('%'))
augroup END

" Set ale fixer
let b:ale_fixers = ['prettier', 'eslint']
" Set ale linter
let g:ale_linters = {
      \ 'rust': ['analyzer'],
      \}
let g:ale_fix_on_save = 1
" Set rust analyzer
if executable('rust-analyzer')
	au User lsp_setup call lsp#register_server({
		\ 'name': 'Rust Language Server',
		\ 'cmd': {server_info->['rust-analyzer']},
		\ 'whitelist': ['rust'],
		\ })
endif

